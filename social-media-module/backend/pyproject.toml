[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pylint]
[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.basic]
# Enforce snake_case naming conventions
function-naming-style = "snake_case"
method-naming-style = "snake_case"
variable-naming-style = "snake_case"
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
class-attribute-naming-style = "snake_case"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
module-naming-style = "snake_case"

# Good variable names which should always be accepted
good-names = [
    "i", "j", "k", "ex", "Run", "_", "id", "db", "ai", "ui", "io", "os"
]

# Bad variable names which should always be refused
bad-names = [
    "foo", "bar", "baz", "toto", "tutu", "tata"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pydantic_ai.*",
    "anthropic.*",
    "openai.*",
    "supabase.*",
    "postgrest.*",
    "httpx.*",
    "structlog.*",
    "asyncpg.*"
]
ignore_missing_imports = true
